{"version":3,"sources":["_constants/routing.constants.js","_actions/routing.actions.js","DeviceDetails.js","DeviceList.js","SpaceOccupier.js","Drawer.js","App.js","serviceWorker.js","_helpers/history.js","_reducers/routing.reducers.js","_reducers/index.js","_helpers/tokenMiddleware.js","_helpers/store.js","index.js"],"names":["routingConstants","SET_SPACE_OCCUPIER","routingActions","setSpaceOccupier","occupier","selectedDevice","dispatch","type","success","CssTextField","withStyles","root","color","borderBottomColor","borderColor","TextField","createData","port","status","rows","DeviceDetails","createMuiTheme","palette","primary","light","main","dark","contrastText","rootClasses","classNames","headingClasses","inputClasses","classes","this","props","className","closeIcon","onClick","closeDetails","id","label","textField","name","margin","variant","InputProps","input","Button","button","Table","table","border","TableHead","TableRow","TableCell","align","TableBody","map","row","key","React","Component","connect","state","routing","theme","marginLeft","spacing","marginRight","maxHeight","marginTop","position","top","right","withTheme","calories","fat","DeviceList","editDevice","console","log","setOccupier","Paper","component","scope","width","overflowX","background","SpaceOccupier","spaceOccupier","useStyles","makeStyles","display","drawer","breakpoints","up","flexShrink","appBar","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","padding","container","useTheme","useState","mobileOpen","setMobileOpen","handleDrawerToggle","src","alt","List","ListItem","ListItemText","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","App","Boolean","window","location","hostname","match","createBrowserHistory","initialState","rootReducer","combineReducers","action","REFRESH_REQUEST","REFRESH_SUCCESS","REFRESH_FAILURE","requestOptions","method","mode","cache","credentials","headers","body","JSON","stringify","localStorage","getItem","parse","refresh_token","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","next","fetch","then","response","json","user","access_token","userObj","allCommunities","setItem","error","failure","toString","token_expiration","refresh_expiration","a","Date","r","now","removeItem","secondary","ReactDOM","render","MuiThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84bae54f.chunk.js","sourcesContent":["export const routingConstants = {\r\n    SET_SPACE_OCCUPIER: 'SET_SPACE_OCCUPIER',\r\n};","import { routingConstants } from '../_constants';\r\n\r\nexport const routingActions = {\r\n    setSpaceOccupier,\r\n};\r\n\r\nfunction setSpaceOccupier(occupier, selectedDevice) {\r\n    return dispatch => {\r\n        dispatch(success(occupier, selectedDevice));\r\n    };\r\n    function success(occupier, selectedDevice) { return { type: routingConstants.SET_SPACE_OCCUPIER, occupier, selectedDevice} }\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { routingActions } from './_actions';\r\n\r\nconst styles = theme => ({\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        maxHeight: '50px',\r\n        marginTop: '19px',\r\n      },\r\n      root: {\r\n        border: '1px solid gray !important',\r\n        position: 'relative',\r\n      },\r\n      input:{\r\n          color: 'white',\r\n      },\r\n      closeIcon: {\r\n        position: 'absolute',\r\n        top: '10px',\r\n        right: '10px',\r\n      }\r\n});\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n      '& label.Mui-focused': {\r\n        color: 'white',\r\n      },\r\n      '& label': {\r\n        color: 'white',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'white',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: 'white',\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: 'white',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: 'white',\r\n        },\r\n      },\r\n    },\r\n  })(TextField);\r\n\r\nfunction createData(port, status) {\r\n    return {port, status};\r\n  }\r\n  \r\n  const rows = [\r\n    createData('8080', 'Good'),\r\n    createData('5000', 'Bad'),\r\n  ];\r\n\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#ffffff',\r\n            main: '#ffffff',\r\n            dark: '#ffffff',\r\n            contrastText: '#ffffff',\r\n          },\r\n    },\r\n  });\r\n\r\nclass DeviceDetails extends React.Component{\r\n    render(){\r\n        var rootClasses = classNames({\r\n            'padding10': true,\r\n        });\r\n        \r\n        var headingClasses = classNames({\r\n            'width100': true,\r\n            'textCenter': true,\r\n        });\r\n\r\n        var inputClasses = classNames({\r\n            'flexDisplay': true,\r\n            'vAlignMiddle': true,\r\n            'marginBottom16': true,\r\n        });\r\n\r\n        const {classes} = this.props;\r\n        return(\r\n            <div className={classNames(classes.root, rootClasses)}>\r\n                <CloseIcon className={classes.closeIcon} onClick={this.props.closeDetails}/>\r\n                <h4 className={classNames(\"margin0\", headingClasses)}>\r\n                    {this.props.selectedDevice}\r\n                </h4>\r\n                <div className={inputClasses}>\r\n\r\n                        <CssTextField\r\n                            id=\"deviceName\"\r\n                            label=\"Name\"\r\n                            className={classes.textField}\r\n                            type=\"email\"\r\n                            name=\"deviceName\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                className: classes.input\r\n                              }}\r\n                        />\r\n                    <Button variant=\"contained\" className={classes.button}>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n                <Table className={classes.table} border=\"2\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                        <TableCell><strong>Port</strong></TableCell>\r\n                        <TableCell align=\"right\"><strong>Status</strong></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map(row => (\r\n                        <TableRow key={row.name}>\r\n                            <TableCell align=\"right\">{row.port}</TableCell>\r\n                            <TableCell align=\"right\">{row.status}</TableCell>\r\n                        </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDeviceDetails.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n  };\r\n\r\n  const mapStateToProps = (state) => {\r\n    const { selectedDevice  } = state.routing\r\n    return {\r\n        selectedDevice,\r\n    };\r\n  }\r\n\r\n  const mapDispatchToProps = (dispatch) => ({\r\n    closeDetails: () => {\r\n        dispatch(routingActions.setSpaceOccupier('deviceList', null)) \r\n    },\r\n  })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(DeviceDetails));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { connect } from 'react-redux';\r\nimport { routingActions } from './_actions';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n    background: 'rgba(0,0,0,0)'\r\n  },\r\n  table: {\r\n  },\r\n});\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat};\r\n}\r\n\r\nconst rows = [\r\n  createData('Device1', 'AHCBDJ1238','167.237.233.876'),\r\n  createData('Device2', 'DSHBFS2389','167.237.233.890'),\r\n];\r\n\r\nclass DeviceList extends React.Component {\r\n\r\n  editDevice = (name) => {\r\n    console.log(name);\r\n    this.props.setOccupier('deviceDetails', name)\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Table className={classes.table} border=\"2\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell><strong>Name</strong></TableCell>\r\n              <TableCell align=\"right\"><strong>Mac ID</strong></TableCell>\r\n              <TableCell align=\"right\"><strong>IP</strong></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\" className=\"vAlignMiddle\">\r\n                  {row.name} &nbsp;\r\n                  <EditIcon className=\"deviceEditIconContainer\" onClick={() => this.editDevice(row.name)}/>\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nDeviceList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setOccupier: (occupier, name) => {\r\n      dispatch(routingActions.setSpaceOccupier(occupier, name)) \r\n  },\r\n})\r\n\r\nexport default  connect(null, mapDispatchToProps)(withStyles(styles, { withTheme: true })(DeviceList));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DeviceDetails from './DeviceDetails';\r\nimport DeviceList from './DeviceList';\r\n\r\nclass SpaceOccupier extends React.Component{\r\n    render() {\r\n        if(this.props.spaceOccupier === 'deviceList'){\r\n            return(\r\n                <DeviceList />\r\n            );\r\n        }\r\n        else if(this.props.spaceOccupier === 'deviceDetails'){\r\n            return(\r\n                <DeviceDetails />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { spaceOccupier  } = state.routing\r\n    return {\r\n      spaceOccupier,\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps, null)(SpaceOccupier);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport classNames from 'classnames';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport SpaceOccupier from './SpaceOccupier';\r\nimport {connect} from 'react-redux';\r\nimport { routingActions } from './_actions';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n    background: 'rgba(0,0,0,0)'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleDrawerToggle1 = () => {\r\n    props.closeDetails();\r\n    if(mobileOpen === true)\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div className=\"maxW100\">\r\n      <div className={classNames(classes.toolbar, \"borderBottom\", \"padding2\", \"maxH64\", \"textCenter\")}>\r\n        <img src=\"images/Logo@2x.png\" alt=\"Self Tunnel\" className=\"maxH60\"/>\r\n      </div>\r\n      <List className=\"whiteText\">\r\n          <div>\r\n            <ListItem button key=\"Devices\" className={classNames(\"textCenter\", \"borderBottom\")} onClick={handleDrawerToggle1}>\r\n              <ListItemText primary=\"Devices\" />\r\n            </ListItem>\r\n          </div>\r\n          <div>\r\n            <ListItem button key=\"Accounts\" className={classNames(\"textCenter\", \"borderBottom\")}>\r\n              <ListItemText primary=\"Accounts\" />\r\n            </ListItem>\r\n          </div>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            \r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n            <SpaceOccupier />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  container: PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element),\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  closeDetails: () => {\r\n      dispatch(routingActions.setSpaceOccupier('deviceList', null)) \r\n  },\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ResponsiveDrawer);","import React from 'react';\nimport './App.css';\nimport Drawer from './Drawer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Drawer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import { routingConstants } from '../_constants';\r\n\r\nconst initialState = {\r\n  spaceOccupier: 'deviceList',\r\n  selectedDevice: null,\r\n}\r\n\r\nexport function routing(state, action) {\r\n  if (typeof state === 'undefined') {\r\n    return initialState\r\n  }\r\n  switch (action.type) {\r\n    case routingConstants.SET_SPACE_OCCUPIER:\r\n      return {\r\n        ...state,\r\n        spaceOccupier: action.occupier,\r\n        selectedDevice: action.selectedDevice\r\n      };\r\n  \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { routing } from './routing.reducers.js'\r\n\r\nconst rootReducer = combineReducers({\r\n  routing,\r\n});\r\n\r\nexport default rootReducer;","import {history} from './history'\r\nconst REFRESH_REQUEST = 'USERS_REFRESH_REQUEST'\r\nconst REFRESH_SUCCESS = 'USERS_REFRESH_SUCCESS'\r\nconst REFRESH_FAILURE = 'USERS_REFRESH_FAILURE'\r\nconst INVALID_ACCESS_TOKEN = 'INVALID_ACCESS_TOKEN'\r\n\r\nconst requestOptions = {\r\n    method: \"POST\",\r\n    mode: \"cors\",\r\n    cache: \"no-cache\",\r\n    credentials: \"omit\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\"\r\n    },\r\n    body: JSON.stringify({\r\n        \"grant_type\": \"refresh_token\",\r\n        \"refresh_token\": localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')).refresh_token : null,\r\n        \"client_id\": \"rTZ61c51XXJriPBSoGReIeZ7W7MjWy\"\r\n    })\r\n};\r\n\r\nconst checkTokenExpirationMiddleware = store => next => action => {\r\n    if(action.type === INVALID_ACCESS_TOKEN) {\r\n        store.dispatch(request())\r\n        fetch(`https://care-api-staging.appspot.com/oauth2/tokens`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(user => {\r\n                if (user.access_token) {\r\n                    var userObj = JSON.parse(localStorage.getItem('user'))\r\n                    user.allCommunities = userObj.allCommunities\r\n                    localStorage.setItem('user', JSON.stringify(user));\r\n                    store.dispatch(success(user))\r\n                }\r\n            },\r\n            error => {\r\n                store.dispatch(failure(error.toString()));\r\n            })\r\n    } else if(action.type === (REFRESH_REQUEST || REFRESH_SUCCESS || REFRESH_FAILURE)) {\r\n        next(action)\r\n    } else {\r\n        const token_expiration =\r\n        JSON.parse(localStorage.getItem(\"user\")) &&\r\n        JSON.parse(localStorage.getItem(\"user\"))[\"access_expiration\"];\r\n        const refresh_expiration = \r\n        JSON.parse(localStorage.getItem(\"user\")) &&\r\n        JSON.parse(localStorage.getItem(\"user\"))[\"refresh_expiration\"];\r\n        const a = new Date(token_expiration + 'Z')   \r\n        const r = new Date(refresh_expiration + 'Z')\r\n        const now = new Date()\r\n        if (a < now && now < r) {\r\n            store.dispatch({ type: INVALID_ACCESS_TOKEN })\r\n        } else if(r < now) {\r\n            localStorage.removeItem('user')\r\n        } else {\r\n            return next(action)\r\n        }\r\n    }\r\n};\r\n\r\nfunction request() { return { type: REFRESH_REQUEST } }\r\nfunction success(user) { return { type: REFRESH_SUCCESS, user } }\r\nfunction failure(error) { return { type: REFRESH_FAILURE, error } }\r\n\r\nexport { checkTokenExpirationMiddleware as TokenMiddleware }","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../_reducers';\r\nimport { TokenMiddleware } from './tokenMiddleware';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware,\r\n        TokenMiddleware\r\n    )\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './_helpers';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: {\n        main: \"#000000\"\n      },\n      secondary: {\n        main: \"#485362\",\n      }\n    }\n  });\n\nReactDOM.render(    \n    <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </MuiThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}